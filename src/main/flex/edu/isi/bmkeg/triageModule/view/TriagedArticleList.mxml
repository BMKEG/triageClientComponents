<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 initialize="init()"
		 width="1000" height="300">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<s:AsyncListView id="asyncListView" list="{triageDocumentsList}" createPendingItemFunction="createPendingItem"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import edu.isi.bmkeg.triageModule.events.*;
			import edu.isi.bmkeg.triage.rl.events.*;
			import edu.isi.bmkeg.vpdmf.model.instances.LightViewInstance;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.collections.errors.ItemPendingError;
			
			import spark.events.GridSelectionEvent;
			
			[Bindable]
			public var listLength:int;

			[Bindable]
			public var typItem:Object;

			private var _triageDocumentsCollection:IList;
			
			[Bindable]
			public function get triageDocumentsList():IList
			{
				return _triageDocumentsCollection;
			}
			
			public function set triageDocumentsList(v:IList):void
			{
				_triageDocumentsCollection = v;
			}
			
			public function get selectedIndex():int
			{
				return triageDocumentListDataGrid.selectedIndex;
			}
			
			public function set selectedIndex(v:int):void 
			{
				triageDocumentListDataGrid.setSelectedIndex(v);
			}
			
			public function init():void {

				this.typItem = {
						"ArticleCitation_7" : "12345678",
						"ArticleCitation" : "not too long",
						"TriagedArticle_2" : "unclassified",
						"TriagedArticle_3" : "0.667"
				};
				
				triageDocumentListDataGrid.addEventListener(KeyboardEvent.KEY_UP, keyHandler);
			
			}
				
			private function keyHandler(event:KeyboardEvent):void {
				
				// left cursor towards 'in'
				if( event.keyCode == 37 || event.keyCode == 187 ) {
					dispatchEvent( new SwitchInOutEvent(SwitchInOutEvent.IN) );
				} 
				// right cursor towards 'out'
				else if(event.keyCode == 39 || event.keyCode == 189) {
					dispatchEvent( new SwitchInOutEvent(SwitchInOutEvent.OUT) );					
				}
				// delete key towards 'unclassified'
				else if(event.keyCode == 8 || event.keyCode == 46) {
					dispatchEvent( new SwitchInOutEvent(SwitchInOutEvent.UNCLASSIFIED) );					
				}
			}
			
			public function clearSelection():void {
				
				triageDocumentListDataGrid.clearSelection();
			
			}
			
			private function popupFormatter(item:Object, column:GridColumn):String {
			
				return item.vpdmfLabel;
			
			}
			
			private function selectionChangeHandler(event:GridSelectionEvent):void {
			
				var o:Object = triageDocumentListDataGrid.selectedItem;	
				dispatchEvent(new FindTriageScoreByIdEvent(o.vpdmfId));
			
			}
			
			private function createPendingItem(index:int, ipe:ItemPendingError):Object {
				
				return {title: "..."};        
			
			}
		]]>
	</fx:Script>
	<s:DataGrid id="triageDocumentListDataGrid" width="100%" height="100%" 
				dataProvider="{asyncListView}"
				selectionMode="multipleRows"
  			    typicalItem="{typItem}"
				selectionChange="selectionChangeHandler(event)"
				sortableColumns="true">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="PMID"  
							  dataField="ArticleCitation_7"
							  dataTipFunction="popupFormatter"
							  showDataTips="true"
							  width="100"/>
				<s:GridColumn headerText="Citation" 
							  dataField="ArticleCitation"
							  dataTipFunction="popupFormatter"
							  showDataTips="true"/>
				<s:GridColumn headerText="Classification"  
							  dataField="TriagedArticle_2"
							  dataTipFunction="popupFormatter"
							  showDataTips="true"
							  width="100"/>
				<s:GridColumn headerText="Score"  
							  dataField="TriagedArticle_3"
							  dataTipFunction="popupFormatter"
							  showDataTips="true"
							  width="100"
						   sortable="true"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:Label top="10" fontSize="12" horizontalCenter="0"  
			 text="{listLength} Articles in Triage Corpus."/>
</s:Group>
